install.packages(c("ggplot2", "devtools"))
search()
library(ggplot2)
search()
install.packages("swirl")
library("swirl")
swirl()
bye()
search()
ls()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
ls()
makeVector(10)
makeVector(10)
makeVector()
rrr <- makeVector(10)
ls(rrr)
rrr$get
rrr$set
rrr$m
rrr$x
rrr$setmean
cachemean()
cachemean(10)
cachemean$m
ls(cachemean)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean
cachemean$m
cachemean$data
m
data
sss <- cachemean(10)
sss <- cachemean()
sss <- cachemean(10,15)
rm(list=ls())
cat('\014')
rm(list=ls())
cat('\014')
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(10,makeVector)
cachemean(makeVector)
exit
exit()
rm(list=ls())
cat('\014')
getwd()
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R"
setwd(path_to_data)
source("cachematrix.R")
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))
str(mat)
summary(mat)
mat
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),nrows=4,ncols=4)
str(mat)
summary(mat)
mat
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),nrow=4,ncol=4)
str(mat)
summary(mat)
mat
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat <- matrix(c(1:16),nrow=4,ncol=4)
str(mat)
summary(mat)
mat
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat <- matrix(c(1:20),nrow=4,ncol=5)
str(mat)
summary(mat)
mat
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat <- matrix(c(1:14),nrow=5,ncol=5)
str(mat)
summary(mat)
mat
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat <- matrix(c(1:25),nrow=5,ncol=5)
str(mat)
summary(mat)
mat
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1:25),nrow=5,ncol=5)
mat_source
mat_invert <- solve(mat_source)
mat_invert
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
mat_invert <- solve(mat_source)
mat_invert
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
det(mat_source)
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
det(mat_source)
mat_invert <- solve(mat_source)
mat_invert
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
matR <- makeCacheMatrix
cacheSolve(matR)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
matR <- makeCacheMatrix
matR
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
matR <- makeCacheMatrix(mat_source)
matR
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
matR <- makeCacheMatrix(mat_source)
cacheSolve(matR)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
matR <- makeCacheMatrix(mat_source)
cacheSolve(matR)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
matR <- makeCacheMatrix(mat_source)
cacheSolve(matR)
cacheSolve(matR)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
mat_source <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source
matR <- makeCacheMatrix(mat_source)
cacheSolve(matR)
cacheSolve(matR)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
#First run with an invertible matrix
mat_source_01 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source_01
matR_01 <- makeCacheMatrix(mat_source_01)
cacheSolve(matR_01)
cacheSolve(matR_01)
#Second run with a different invertible matrix
mat_source_02 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source_02
matR_02 <- makeCacheMatrix(mat_source_02)
cacheSolve(matR_02)
cacheSolve(matR_02)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
#First run with an invertible matrix
mat_source_01 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source_01
matR_01 <- makeCacheMatrix(mat_source_01)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_01)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_01)
cacheSolve(matR_01)
#Second run with a different invertible matrix
mat_source_02 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
mat_source_02
matR_02 <- makeCacheMatrix(mat_source_02)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_02)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_02)
cacheSolve(matR_02)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
#First run with an invertible matrix
mat_source_01 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
#mat_source_01
matR_01 <- makeCacheMatrix(mat_source_01)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_01)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_01)
cacheSolve(matR_01)
#Second run with a different invertible matrix
mat_source_02 <- matrix(c(1,0,5,2,1,6,3,4,0),nrow=3,ncol=3)
#mat_source_02
matR_02 <- makeCacheMatrix(mat_source_02)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_02)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_02)
cacheSolve(matR_02)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
#First run with an invertible matrix
mat_source_01 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
#mat_source_01
matR_01 <- makeCacheMatrix(mat_source_01)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_01)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_01)
cacheSolve(matR_01)
#Second run with a different invertible matrix
mat_source_02 <- matrix(c(1,0,5,2,1,6,3,4,0),nrow=3,ncol=3)
#mat_source_02
matR_02 <- makeCacheMatrix(mat_source_02)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_02)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_02)
cacheSolve(matR_02)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
#First run with an invertible matrix
mat_source_01 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
#mat_source_01
matR_01 <- makeCacheMatrix(mat_source_01)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_01)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_01)
cacheSolve(matR_01)
#Second run with a different invertible matrix
mat_source_02 <- matrix(c(1,0,5,2,1,6,3,4,0),nrow=3,ncol=3)
#mat_source_02
matR_02 <- makeCacheMatrix(mat_source_02)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_02)
#Second & third ininvocation of cacheSolve should return cached inversion
cacheSolve(matR_02)
cacheSolve(matR_02)
## This R Script is used to invoke, test and display the results of the ProgrammingAssignment2
## Specifically: makeCacheMatrix and cacheSolve
rm(list=ls())
cat('\014')
getwd()
#path_to_data <- "/Users/Rick/Dropbox/Data-Science/Coursera/DS-02-R"
path_to_data <- "/Users/rickwrites/Dropbox/Data-Science/Coursera/DS-02-R/ProgrammingAssignment2/"
setwd(path_to_data)
source("cachematrix.R")
#First run with an invertible matrix
mat_source_01 <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
#mat_source_01
matR_01 <- makeCacheMatrix(mat_source_01)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_01)
#Second & third invocation of cacheSolve should return cached inversion
cacheSolve(matR_01)
cacheSolve(matR_01)
#Second run with a different invertible matrix
mat_source_02 <- matrix(c(1,0,5,2,1,6,3,4,0),nrow=3,ncol=3)
#mat_source_02
matR_02 <- makeCacheMatrix(mat_source_02)
#Initial invocation of cacheSolve should return computed inversion
cacheSolve(matR_02)
#Second & third invocation of cacheSolve should return cached inversion
cacheSolve(matR_02)
cacheSolve(matR_02)
